/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import {MirroredRepeatWrapping, MeshBasicMaterial, MeshStandardMaterial } from 'three';
import  {useFrame} from 'react-three-fiber'

export default function Model(props) {
  const group = useRef()
  const barrel = useRef();
  const { nodes, materials } = useGLTF('/Barrel.glb')
  const diffuse = useTexture('/Textures/Diffuse.jpg')
  // diffuse.wrapT = MirroredRepeatWrapping;
  const normal = useTexture('/Textures/Normal.jpg');
  const roughness = useTexture('/Textures/Roughness.jpg');
  const metallic = useTexture('/Textures/Metallic.png')
  const standardmaterial = new MeshStandardMaterial({
    map: diffuse, 
    normalMap:normal, 
    roughnessMap:roughness, 
    metalnessMap:metallic,
    metalness:1,
    roughness:1,
  });
  // useFrame(() => {
  //   barrel.current.rotation.x = barrel.current.rotation.y += 0.01
  // })

  const basicmaterial = new MeshBasicMaterial({map:diffuse})
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh ref={barrel} material={standardmaterial} geometry={nodes.Cylinder.geometry} />
    </group>
  )
}

useGLTF.preload('/Barrel.glb')
